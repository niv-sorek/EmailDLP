class Vulnerability:
    def __init__(self, cve, fix, num_of_exploits, cvss_level):
        self.fix = fix
        self.cve = cve
        self.number_of_exploit = num_of_exploits
        self.cvss_level = float(cvss_level)
        self.vulnerability_level = self.calculate_venerability_level()

    def calculate_venerability_level(self):
        if self.cvss_level > 9:
            return self.cvss_level

        if self.number_of_exploit == 0:
            vulnerability_level = self.cvss_level * 0.5
        elif self.number_of_exploit == 1:
            vulnerability_level = self.cvss_level * 0.9
        else:
            vulnerability_level = self.cvss_level
        return vulnerability_level

    def __str__(self):
        return '%-20s%2s%20s%12s%12s' % (self.cve, str(self.number_of_exploit), str(
            self.fix), str(self.cvss_level), str(
            self.vulnerability_level))

    # return self.cve + " exploits: " + str(self.number_of_exploit) + " " + str(
    #     self.fix) + " cvss: " + str(self.cvss_level) + " level: " + str(
    #     self.vulnerability_level)
